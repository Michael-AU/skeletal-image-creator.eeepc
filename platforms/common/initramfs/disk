#!/bin/bash
# Unified squash Hard Disk filesystem mounting		  -*- shell-script -*-

mountroot ()
{
    CFG_FILE=/etc/moblin-initramfs.cfg
    if [ -f ${CFG_FILE} ]
    then
	. ${CFG_FILE}
    else
	echo "Did not find config file: ${CFG_FILE}"
	sleep 5
	halt
    fi
    # squashfs enabled?
    if [ "${use_squashfs}" -eq 1 ]
    then
	echo "Using squashfs..."
	mkdir -p /container
	mkdir -p /squashmnt
	mkdir -p /persistmnt
    else
	echo "NOT using squashfs..."
    fi

    # Find the boot disk
    while true; do
      for device in 'hda' 'hdb' 'sda' 'sdb'; do
        echo "checking device /dev/${driver}"
        if [ -e /sys/block/${driver}/removable ]; then
           if [ "$(cat /sys/block/${driver}/removable)" = "0" ]; then
              echo "found harddisk at /dev/${driver}"
              found="yes"
              break
           fi
         fi
      done
      if [ "$found" = "yes" ]; then
        break;
      fi
      /bin/sleep 5
    done
    # try to resume first
    echo "Attempting to resume from hibernation..."
    /bin/resume /dev/${device}3

    # if the resume succeeded then we won't get to here, so if we have got here
    # then resume did NOT succeed, which is okay.
    echo "Will mount root from /dev/${driver}"
    if [ "${use_squashfs}" -eq 1 ]
    then
	# We are using squashfs
	echo "Setting up our squashfs and ext3fs unionfs system..."
	echo "Sleeping 30 seconds..."
	sleep 30
	mount /dev/${device}1 /container 2> /dev/null
	while [ ! -e "/container/rootfs.img" ]
	do
	    /bin/sleep 0.5
	    mount /dev/${device}1 /container 2> /dev/null
	done
	mount -o loop -t squashfs /container/rootfs.img /squashmnt
	mount /dev/${device}2 /persistmnt
	mount -t unionfs -o dirs=/persistmnt=rw:/squashmnt=ro none ${rootmnt}
    else
	# We are NOT using squashfs
	echo "mounting root partition, NOT using squashfs"   
	echo "Sleeping 30 seconds..."
	sleep 30
	mount /dev/${device}2 ${rootmnt}	# 2> /dev/null
	while [ ! -e "${rootmnt}/bin" ]
	do
	    /bin/sleep 0.5
	    mount /dev/${device}2 ${rootmnt}	# 2> /dev/null
	done
	mount /dev/${device}1 ${rootmnt}/boot 
    fi
}

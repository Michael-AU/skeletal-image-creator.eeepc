#!/usr/bin/python -tt
###############################################################################

import sys, os

from getopt import *

sys.path.insert(0, '/usr/share/esdk/lib')
from SDK import *

def usage():
    print >> sys.stderr, "Usage: %s [ARGS...]" % (sys.argv[0])
    print >> sys.stderr, """<Informational Options>
    No arguments        Open GUI
    --help              Print this message
    --list-platforms    List available platforms
    --list-projects     List existing projects
    --list-targets      List installed targets on all projects
    
<Adding a new project>
    --add-project --name=NAME --platform=PLATFORM --desc=DESC --path=PATH

<Adding a new target to an existing project>
    --add-target --name=NAME --project=PROJECT_NAME

<Mounting a project>
    --mount=PROJECT_NAME
    --umount=PROJECT_NAME
    
"""

def list_platforms():
    sdk = SDK()

    print "Available platforms: "
    for key in sdk.platforms.keys():
        print "\t%s" % (sdk.platforms[key].name)

def list_projects():
    sdk = SDK()

    print "Existing projects: "
    for key in sdk.projects.keys():
        p = sdk.projects[key]
        print """
        Name:        %s
        Path:        %s
        Description: %s
        Platform:    %s
""" % (p.name, p.path, p.desc, p.platform.name)

def list_targets():
    sdk = SDK()
    
    for pkey in sdk.projects.keys():
        print "Installed targets in %s" % (sdk.projects[pkey].name)
        for tkey in sdk.projects[pkey].targets.keys():
            print "\t%s" % (sdk.projects[pkey].targets[tkey].name)
        print ""

def add_project(path, name, desc, platform):
    if path == '' or name == '' or platform == '':
        usage()
        sys.exit(1)

    sdk = SDK()

    if sdk.projects.has_key(name):
        print >> sys.stderr, "project %s already exists!" % (name)
        sys.exit(1)
    
    proj = sdk.create_project(path, name, desc, sdk.platforms[platform])
    proj.install()

def add_target(project, name):
    if project == '' or name == '':
        usage()
        sys.exit(1)

    sdk = SDK()

    if not sdk.projects.has_key(project):
        print >> sys.stderr, "project %s does not exists" % (project)
        sys.exit(1)
    
    proj = sdk.projects[project].create_target(name)

if __name__ == '__main__':
    
    (args, extras) = getopt(sys.argv[1:], '', ['help',
                                               'list-platforms',
                                               'list-projects',
                                               'list-targets',
                                               'mount=',
                                               'umount=',
                                               'add-project',
                                               'add-target',
                                               'project=',
                                               'name=',
                                               'platform=',
                                               'desc=',
                                               'path='])
    if len(extras) > 0:
        usage()
        sys.exit(1)
        
    if (len(args) == 0):
        from gui import *
        esdkMain()
        gtk.main()

    command = ''
    project = ''
    platform = ''
    desc = ''
    path = ''
    name = ''
    for i in args:
        if i[0] == '--help':
            usage()
            sys.exit(1)
            
        elif i[0] == '--list-platforms':
            list_platforms()
            
        elif i[0] == '--list-projects':
            list_projects()

        elif i[0] == '--list-targets':
            list_targets()

        elif i[0] == '--mount':
            SDK().projects[i[1]].mount()        

        elif i[0] == '--umount':
            SDK().projects[i[1]].umount()

        elif i[0] == '--add-project':
            command = 'add-project'

        elif i[0] == '--add-target':
            command = 'add-target'

        elif i[0] == '--name':
            name = i[1]

        elif i[0] == '--project':
            project = i[1]

        elif i[0] == '--platform':
            platform = i[1]

        elif i[0] == '--desc':
            desc = i[1]

        elif i[0] == '--path':
            path = i[1]

    if len(command) > 0:
        if command == 'add-project':
            add_project(path, name, desc, platform)
        elif command == 'add-target':
            add_target(project, name)

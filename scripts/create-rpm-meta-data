#!/bin/bash
set +x
tagged_files="group license copyright url summary description version release packager arch"
srcs_regex="\.(tar\.gz|tar\.bz2|tar\.Z|tar|tgz|gz|sig|sign|asc|zip)$"

rpmi () {
	rpm --nosignature -q -p $1 --queryformat "%{$2}\n"
}

spec_grep () {
	cat $1 | grep -m 1 $2: | sed "s/$2://g" | sed "s/ //g"
}

# Usage
if [ $# -lt 1 ]; then
    echo "$0 is a utility which populates the"
    echo "package-meta-data area automatically given a spec file"
    echo ""
    echo "USAGE: $0 <repos root dir> <spec file>"
    exit -1
fi

if [ ! -d $1 ]; then
    echo "$1 is not a directory!"
    exit -1
fi

repository=$1/package-meta-data
spec=$2

# refresh the package-meta-data
if [ ! -e $repository ]; then
cd $1
git clone rsync://umd-repo.jf.intel.com/repos/FC6/package-meta-data.git
fi

if [ ! -d $repository ]; then
    echo "$repository is not a directory!"
    exit -1
fi

# Extract RPM/SRPM name from spec file
pname=$(spec_grep $spec Name)
pver=$(spec_grep $spec Version)
prelease=$(spec_grep $spec Release)
pkg=/usr/src/redhat/RPMS/i586/$pname-$pver-$prelease.i586.rpm
echo RPM=$pkg
spkg=/usr/src/redhat/SRPMS/$pname-$pver-$prelease.src.rpm
echo SRPM=$spkg

# Build the RPM and SRPM
rpmbuild -ba $spec --target i586
if [ ! -e $pkg ]; then
    echo "RPM failed to build: $pkg"
    exit -1
fi
if [ ! -e $spkg ]; then
    echo "SRPM failed to build: $spkg"
    exit -1
fi

# Extract the info from the RPM and SRPM
pname=$(rpmi $pkg name)
echo NAME=$pname
pgroup=$(rpmi $pkg group|sed 's/ /_/g')
echo GROUP=$pgroup
pver=$(rpmi $pkg version)
echo VERSION=$pver
prelease=$(rpmi $pkg release)
echo RELEASE=$prelease
pdistro=$(rpmi $pkg distribution)
echo DISTRIBUTION=$pdistro
pdir=$repository/$pgroup/$pname
echo PATH=$pdir

# Generate the approproate directories for the meta data
mkdir -p "$pdir"/info
if [ ! -e "$pdir"/specs ]; then
	mkdir -p "$pdir"/specs
	cp -f $spec "$pdir"/specs
fi

# Generate all the info files
echo $pname > "$pdir"/info/name
for tag in $(echo $tagged_files); do 
	rpmi $pkg $tag > "$pdir"/info/$tag
done
rpm --nosignature -qp $pkg	\
    --queryformat "[%-30{requires} %-30{requirename} %-10{requireversion} %-10{requireflags}\n]" \
    > "$pdir"/info/dependencies
rpm --nosignature  -qp $spkg --queryformat  "[%{source}\n]" | \
	egrep $srcs_regex > "$pdir"/info/external-sources || true
rpm --nosignature  -qp $pkg --queryformat  "[%{source}\n]" | \
	egrep -v "^\(none\)$" | \
	egrep -v $srcs_regex > "$pdir"/info/extras || true
rpm --nosignature  -qp $spkg --queryformat  "[%{patch}\n]" | \
	egrep -v "^\(none\)$" \
	> "$pdir"/info/patches || true
